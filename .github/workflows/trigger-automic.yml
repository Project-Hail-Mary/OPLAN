name: Trigger Automic

on:
  push:
    branches:
      - main

jobs:
  find-production-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Find production commit
        id: find_commit
        run: |
          production_commit=$(git rev-list -n 1 refs/tags/PRODUCTION || echo "none")
          latest_commit=$(git rev-parse HEAD)
          echo "Latest Commit SHA: $latest_commit"
          echo "Production Commit SHA: $production_commit"
          echo "::set-output name=latest_commit::$latest_commit"
          echo "::set-output name=production_commit::$production_commit"

      - name: Generate changes list
        id: generate_changes
        run: |
          if [ "${{ steps.find_commit.outputs.production_commit }}" != "none" ]; then
            echo "Comparing Production Commit (${steps.find_commit.outputs.production_commit}) with Latest Commit (${steps.find_commit.outputs.latest_commit})"
            git diff --name-only ${{ steps.find_commit.outputs.production_commit }} ${{ steps.find_commit.outputs.latest_commit }} > changes.txt
          else
            echo "Production tag not found, using latest commit as baseline."
            echo "${{ steps.find_commit.outputs.latest_commit }}" > changes.txt
          fi
          cat changes.txt
        continue-on-error: true

      - name: Trigger Automic
        run: |
          while IFS= read -r file; do
            if [ "$file" != ".github/workflows/trigger-automic.yml" ]; then
              encoded_file=$(echo ${file} | sed 's#/#%2F#g')
              if [ "${{ steps.find_commit.outputs.production_commit }}" != "none" ]; then
                diff_link="https://github.com/Project-Hail-Mary/OPLAN/compare/${{ steps.find_commit.outputs.production_commit }}...${{ steps.find_commit.outputs.latest_commit }}?diff=split%26w=%26short_path=${encoded_file}"
              else
                diff_link="https://github.com/Project-Hail-Mary/OPLAN/commit/${{ steps.find_commit.outputs.latest_commit }}?diff=split%26w=%26short_path=${encoded_file}"
              fi
              file_commit_link="${{ steps.find_commit.outputs.latest_commit }}"
              echo "Constructed diff link: ${diff_link}"

              curl --location 'http://104.196.70.116:8088/ae/api/v1/103/executions' \
                --header 'Content-Type: application/json' \
                --user '103/UDM/UDM:udm' \
                --data "{\"object_name\": \"GITHUB.PRE.APPROVE\", \"inputs\": {\"&FILE#\": \"${file_commit_link}\", \"&DIFF_LINK#\": \"${diff_link}\", \"&LATEST_COMMIT_SHA#\": \"${{ steps.find_commit.outputs.latest_commit }}\"}}"
            else
              echo "Skipping curl command for .github/workflows/trigger-automic.yml"
            fi
          done < changes.txt
